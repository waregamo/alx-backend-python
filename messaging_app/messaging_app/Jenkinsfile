pipeline {
    agent any

    environment {
        GIT_CREDENTIALS = 'github-credentials'        // GitHub PAT
        DOCKER_CREDENTIALS = 'docker-hub-credentials' // Docker Hub credentials
        IMAGE_NAME = 'waregamo/messaging-app'          // Docker Hub repository
        IMAGE_TAG = "latest"
        VENV_DIR = 'venv'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    credentialsId: "${GIT_CREDENTIALS}",
                    url: 'https://github.com/waregamo/alx-backend-python.git'
            }
        }

        stage('Setup Python') {
            steps {
                sh "python3 -m venv ${VENV_DIR}"
                sh ". ${VENV_DIR}/bin/activate && pip3 install --upgrade pip"
                sh ". ${VENV_DIR}/bin/activate && pip3 install -r messaging_app/requirements.txt || echo 'No requirements file found'"
            }
        }

        stage('Run Tests') {
            steps {
                sh ". ${VENV_DIR}/bin/activate && pytest messaging_app/tests --junitxml=report.xml"
            }
            post {
                always {
                    junit 'report.xml'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t ${IMAGE_NAME}:${IMAGE_TAG} ."
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: "${DOCKER_CREDENTIALS}", 
                                                  usernameVariable: 'DOCKER_USER', 
                                                  passwordVariable: 'DOCKER_PASS')]) {
                    sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin'
                    sh "docker push ${IMAGE_NAME}:${IMAGE_TAG}"
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished.'
        }
    }
}

